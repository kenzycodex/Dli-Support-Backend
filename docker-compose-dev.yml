version: '3.8'

services:
  # Main Laravel Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dli-support-app
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      - APP_NAME=DLI Support Platform
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=http://localhost
      - APP_FRONTEND_URL=http://localhost:3000
      
      # Database Configuration
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=dli_student_db
      - DB_USERNAME=dli_user
      - DB_PASSWORD=dli_secure_password_2025
      
      # Email Configuration (Update with your SMTP settings)
      - MAIL_MAILER=smtp
      - MAIL_HOST=smtp.mailtrap.io
      - MAIL_PORT=2525
      - MAIL_USERNAME=your_mailtrap_username
      - MAIL_PASSWORD=your_mailtrap_password
      - MAIL_ENCRYPTION=tls
      - MAIL_FROM_ADDRESS=noreply@dlisupport.com
      - MAIL_FROM_NAME=DLI Support Platform
      
      # Email Feature Toggles
      - SEND_WELCOME_EMAILS=true
      - SEND_BULK_OPERATION_REPORTS=true
      - SEND_ADMIN_NOTIFICATIONS=true
      - AUTO_GENERATE_PASSWORDS=true
      
      # Queue Configuration
      - QUEUE_CONNECTION=database
      - QUEUE_EMAILS=emails
      - QUEUE_BULK_EMAILS=bulk-emails
      - QUEUE_ADMIN_REPORTS=admin-reports
      
      # Cache & Session
      - CACHE_DRIVER=file
      - SESSION_DRIVER=database
      - SESSION_LIFETIME=120
      
      # Security Settings
      - TEMPORARY_PASSWORD_EXPIRY_DAYS=7
      - MAX_LOGIN_ATTEMPTS=5
      - LOCKOUT_DURATION=30
      
      # File Upload Settings
      - MAX_CSV_FILE_SIZE_KB=10240
      - MAX_BULK_USERS_PER_IMPORT=1000
      - BULK_EMAIL_BATCH_SIZE=10
      
    volumes:
      - ./storage:/var/www/html/storage
      - ./public:/var/www/html/public
    depends_on:
      - db
    networks:
      - dli-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: dli-support-db
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root_secure_password_2025
      - MYSQL_DATABASE=dli_student_db
      - MYSQL_USER=dli_user
      - MYSQL_PASSWORD=dli_secure_password_2025
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - dli-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot_secure_password_2025"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for Caching (Optional but recommended for production)
  redis:
    image: redis:7-alpine
    container_name: dli-support-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dli-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Mailpit for Email Testing (Development/Staging)
  mailpit:
    image: axllent/mailpit
    container_name: dli-support-mailpit
    restart: unless-stopped
    ports:
      - "8025:8025"  # Web interface
      - "1025:1025"  # SMTP server
    environment:
      - MP_SMTP_AUTH_ACCEPT_ANY=1
      - MP_SMTP_AUTH_ALLOW_INSECURE=1
    networks:
      - dli-network
    profiles:
      - development
      - staging

  # Database Admin Interface (Development/Staging)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: dli-support-phpmyadmin
    restart: unless-stopped
    environment:
      - PMA_HOST=db
      - PMA_USER=dli_user
      - PMA_PASSWORD=dli_secure_password_2025
      - UPLOAD_LIMIT=300M
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - dli-network
    profiles:
      - development
      - staging

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  dli-network:
    driver: bridge

---
# docker-compose.override.yml for development
# Create this file for development overrides

version: '3.8'

services:
  app:
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_URL=http://localhost
      
      # Use Mailpit for development
      - MAIL_MAILER=smtp
      - MAIL_HOST=mailpit
      - MAIL_PORT=1025
      - MAIL_USERNAME=null
      - MAIL_PASSWORD=null
      - MAIL_ENCRYPTION=null
      
      # Development settings
      - SEND_WELCOME_EMAILS=true
      - SEND_BULK_OPERATION_REPORTS=true
      - MAIL_PREVIEW_MODE=false
      - MAIL_LOG_MODE=false
      
    volumes:
      # Mount source code for development
      - .:/var/www/html
      - ./storage:/var/www/html/storage
    profiles:
      - development